name: Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    needs: []
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            os: linux
            target: x86_64-unknown-linux-gnu
            binary_name: changepacks-linux-x86_64
          - platform: windows-latest
            os: windows
            target: x86_64-pc-windows-msvc
            binary_name: changepacks-windows-x86_64.exe
          - platform: macos-latest
            os: macos
            target: x86_64-apple-darwin
            binary_name: changepacks-macos-x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: clippy, rustfmt

      - name: Setup Python (for Python wheel)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install uv
        if: matrix.platform == 'ubuntu-latest'
        uses: astral-sh/setup-uv@v5

      - name: Install maturin
        if: matrix.platform == 'ubuntu-latest'
        run: uv pip install maturin --system

      - name: Build Rust binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build Python wheel
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd bridge/python
          maturin build --release --target ${{ matrix.target }}

      - name: Create Release
        id: create_release
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Rust Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/changepacks${{ matrix.os == 'windows' && '.exe' || '' }}
          asset_name: ${{ matrix.binary_name }}
          asset_content_type: application/octet-stream

  upload-windows:
    name: Upload for Windows
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Build Rust binary
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload Rust Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-msvc/release/changepacks.exe
          asset_name: changepacks-windows-x86_64.exe
          asset_content_type: application/octet-stream

  upload-macos:
    name: Upload for macOS
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin

      - name: Build Rust binary
        run: cargo build --release --target x86_64-apple-darwin

      - name: Upload Rust Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: target/x86_64-apple-darwin/release/changepacks
          asset_name: changepacks-macos-x86_64
          asset_content_type: application/octet-stream